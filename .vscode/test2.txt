// --- Global Değişkenler ---
let currentPage = 1;
const productsPerPage = 28;
let totalProducts = 0;

// --- Sayfa Yüklendiğinde Çalışacak Ana Olay ---
document.addEventListener('DOMContentLoaded', () => {
    getData(1); // 1. sayfa ürünlerini yükle
    updateCartCount(); // Sepet sayısını güncelle
});

// --- API'den Veri Çekme ve Ürünleri Ekrana Basma ---
async function getData(page) {
    currentPage = page;
    // HATA DÜZELTİLDİ: 'skip' sayfa başına ürün sayısına göre hesaplanmalı
    const skip = (page - 1) * productsPerPage;

    try {
        const response = await fetch(`https://dummyjson.com/products?limit=${productsPerPage}&skip=${skip}`);
        const data = await response.json();

        totalProducts = data.total;
        const products = data.products;

        // HATA DÜZELTİLDİ: Metodun doğru adı 'getElementById' (çoğul 's' takısı yok)
        const productContainer = document.getElementById('product-list');
        productContainer.innerHTML = ''; // Önceki ürünleri temizle

        products.forEach(product => {
            const productCardHTML = `
                <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                    <div class="card h-100 text-white bg-dark">
                        <img src="${product.thumbnail}" class="card-img-top" alt="${product.title}" style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">${product.title}</h5>
                            <p class="card-text">${product.description.substring(0, 50)}...</p>
                            <div class="mt-auto">
                                <p class="fs-5 fw-bold">${product.price} $</p>
                                <button class="btn btn-warning w-100" onclick="addToCart(${product.id})">Sepete Ekle</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            productContainer.innerHTML += productCardHTML;
        });
        
        // Ürünler yüklendikten sonra sayfa numaralarını oluştur
        renderPaginationControls();

    } catch (error) {
        // Hata mesajı geliştirildi
        console.error("Veri alınırken bir hata oluştu:", error);
    }
}

// --- Sayfa Numarası Butonlarını Oluşturma ---
function renderPaginationControls() {
    const paginationContainer = document.getElementById('pagination-controls');
    if (!paginationContainer) return; // Element yoksa hata vermemesi için kontrol
    paginationContainer.innerHTML = '';

    const totalPages = Math.ceil(totalProducts / productsPerPage);

    for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement('li');
        li.className = `page-item ${i === currentPage ? 'active' : ''}`; // Mevcut sayfa aktif
        
        li.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); getData(${i});">${i}</a>`;
        
        paginationContainer.appendChild(li);
    }
}

// --- Sepet Fonksiyonları ---
function getCart() {
    return JSON.parse(localStorage.getItem('cart')) || [];
}

function saveCart(cart) {
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCount(); // Sepet her güncellendiğinde sayacı da güncelle
}

function addToCart(productId) {
    let cart = getCart();
    const existingProduct = cart.find(item => item.id === productId);

    if (existingProduct) {
        existingProduct.quantity++;
    } else {
        cart.push({ id: productId, quantity: 1 });
    }

    saveCart(cart);
    alert('Ürün sepete eklendi!');
}

function updateCartCount() {
    const cart = getCart();
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    const cartCounterElement = document.getElementById('productCounter');
    if (cartCounterElement) {
        cartCounterElement.textContent = totalItems;
        // Sepet boşsa sayacı gizle, doluysa göster
        cartCounterElement.style.display = totalItems > 0 ? 'inline-block' : 'none';
    }
}